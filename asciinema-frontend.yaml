---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: asciinema-frontend
  namespace: asciinema
spec:
  replicas: 1
  selector:
    matchLabels:
      app: asciinema-frontend
  serviceName: "asciinema-frontend"
  template:
    metadata:
      labels:
        app: asciinema-frontend
    spec:
      containers:
        - name: nginx
          image: "nginx"
          ports:
          - containerPort: 80
            name: http
          volumeMounts:
            - name: config
              mountPath: /etc/nginx/conf.d/
            - name: cache
              mountPath: /cache
          envFrom:
            - configMapRef:
                name: asciinema
      initContainers:
        - name: init-rails
          image: busybox
          command: ['sh', '-c', 'nc -vz rails.asciinema 3000']
        - name: init-phoenix
          image: busybox
          command: ['sh', '-c', 'nc -vz phoenix.asciinema 4000']
      volumes:
        - name: config
          configMap:
            name: asciinema-nginx
        - name: cache
          persistentVolumeClaim:
            claimName: cache
#          hostPath:
#            path: /data/asciinema/asciinema-nginx
  volumeClaimTemplates:
  - metadata:
      name: cache
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "platinum-express-storage"
      resources:
        requests:
          storage: 1Gi
---
kind: Service
apiVersion: v1
metadata:
  name: nginx
  namespace: asciinema
spec:
  selector:
    app: asciinema-frontend
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
